<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.x_vel = 3;
global.y_vel = 0;
global.ball_x = 0;
global.ball_y = 0;
wall_width = sprite_get_width(spr_Wall);
wall_height = sprite_get_height(spr_Wall);
collision_trigger_y = false;
collision_trigger_x = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Displace
if (collision_trigger_y) {
global.y_vel *= -1; 
collision_trigger_y = false;
}
if (collision_trigger_x) {
global.x_vel *= -1; 
collision_trigger_x = false;
}
x += global.x_vel;
y += global.y_vel;
global.ball_x = x;
global.ball_y = y;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collisions

i = 0;

cx = global.x_vel;
cy = global.y_vel;
while (cx &gt; 0 &amp;&amp; cy &gt; 0) {
    //Player
    if (place_meeting(x,y+cy+sprite_height/2,p_Player)) {
        collision_trigger_y = true;
        y = y + cy + (sprite_height/2) - 1;
    }
    
    //Bricks
    if (place_meeting(x,y+cy+sprite_height/2,obj_Brick) || place_meeting(x,y+cy-sprite_height/2,obj_Brick)) {
        collision_trigger_y = true;
    }
    
    else if (place_meeting(x+cx+sprite_height/2,y,obj_Brick) || place_meeting(x+cx-sprite_height/2,y,obj_Brick)) {
        collision_trigger_x = true;
    }
    
    //Walls
    if (place_meeting(x,y+cy+sprite_height/2,obj_Wall) || place_meeting(x,y+cy-sprite_height/2,obj_Wall)) {
        collision_trigger_y = true;
        instance_create(x,0,obj_debug);
    }
    
    else if (place_meeting(x+cx+sprite_width/2,y,obj_Wall) || place_meeting(x+cx-sprite_width/2,y,obj_Wall)) {
        collision_trigger_x = true;
        instance_create(0,y,obj_debug);
    }
    cx--;
    cy--;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>511</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_rectangle</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>y</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>x+global.x_vel+(sprite_width/2)</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>y+global.y_vel+sprite_height/2</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
